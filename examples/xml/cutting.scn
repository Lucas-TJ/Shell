<?xml version="1.0"?>
<Node name="Root" gravity="0 0 0" >

    <Node name="plugins">
        <RequiredPlugin name="Shell"/>
        <RequiredPlugin name="Sofa.Component.AnimationLoop"/> <!-- Needed to use components [FreeMotionAnimationLoop] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/> <!-- Needed to use components [MinProximityIntersection] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [CollisionResponse] --> 
        <RequiredPlugin name="Sofa.Component.Constraint.Lagrangian.Solver"/> <!-- Needed to use components [LCPConstraintSolver] --> 
        <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [FixedProjectiveConstraint] -->  
        <RequiredPlugin name="Sofa.Component.Engine.Transform"/> <!-- Needed to use components [TransformEngine] -->  
        <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->  
        <RequiredPlugin name="Sofa.Component.Mapping.Linear"/> <!-- Needed to use components [IdentityMapping] -->  
        <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [UniformMass] -->  
        <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] --> 
        <RequiredPlugin name="Sofa.GL.Component.Rendering2D"/> <!-- Needed to use components [OglColorMap] -->  
        <RequiredPlugin name="Sofa.Component.SceneUtility"/> <!-- Needed to use components [InfoComponent] -->  
        <RequiredPlugin name="Sofa.Component.SolidMechanics.FEM.Elastic"/> <!-- Needed to use components [TriangularFEMForceField] -->  
        <RequiredPlugin name="Sofa.Component.SolidMechanics.Spring"/> <!-- Needed to use components [RestShapeSpringsForceField] -->  
        <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->  
        <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TriangleSetGeometryAlgorithms,TriangleSetTopologyContainer,TriangleSetTopologyModifier] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Geometry"/> <!-- Needed to use components [TriangleCollisionModel] --> 
        <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [VisualStyle] -->  
        <RequiredPlugin name="Sofa.GL.Component.Rendering3D"/> <!-- Needed to use components [DataDisplay,OglModel] -->
        <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- Needed to use components [MeshOBJLoader] -->
    </Node>

    <DefaultAnimationLoop/>
    <!--FreeMotionAnimationLoop/--> <!-- Je ne sais pas pourquoi mais lorsque j'utilise FreeMotionAnimationLoop, l'animation ne fonction plus... 
                                    Alors que je souhaite utiliser FreeMotionAnimationLoop pour que ça soit plus réaliste que DefaultAnimationLoop-->
    <!--LCPConstraintSolver tolerance="1e-3" maxIt="1000"/-->
    <VisualStyle displayFlags="showBehavior" />
    <!--<AdaptiveCuttingSetting button="Left" /-->

    <CollisionPipeline verbose="0"/>
    <BruteForceBroadPhase name="N2" />
    <BVHNarrowPhase/>
    <MinProximityIntersection name="Proximity" alarmDistance="0.8" contactDistance="0.5" />
    <CollisionResponse name="Response" response="FrictionContactConstraint" />

    <Node name="points">
        <MechanicalObject template="Vec3d" name="fixedPoints"
            position="-1.2 -1 0    -1.2 1 0"
            showObject="true" />
        <FixedProjectiveConstraint indices="0 1" />
    </Node>

    <Node name="Mesh">

        <EulerImplicitSolver rayleighMass="1" rayleighStiffness="1" />
        <CGLinearSolver iterations="100" tolerance="1e-15" threshold="1e-15"/>

        <MeshOBJLoader name="mesh" filename="../../mesh/plane128.obj"/>
        <TriangleSetTopologyContainer name="topo" src="@mesh" />

        <MechanicalObject template="Vec3d" name="MO" />
        <UniformMass totalMass="0.1" />

        <AdaptiveCuttingController template="Vec3d" />
        <Test2DAdapter template="Vec3d" name="adapter" sigma="1e-5" />

        <TriangleSetTopologyModifier />
        <!--<TriangleSetTopologyContainer />-->
        <TriangleSetGeometryAlgorithms />

        <FixedProjectiveConstraint indices="0 1" />

        <RestShapeSpringsForceField name="Springs" external_rest_shape="@../points/fixedPoints"
            points="2 3"
            external_points="1 0"
            stiffness="50000"
            angularStiffness="50000" />


        <TriangularFEMForceField name="FEM" youngModulus="5000" poissonRatio="0.3" method="large" />

        <!--
        <Point />
        <Line />
        -->
        <TriangleCollisionModel />

        <Node name="Render">
            <OglModel name="Visual" color="#90EE90"/>
            <IdentityMapping input="@.." output="@Visual"/>
        </Node>

        <Node name="Render wire">
            <VisualStyle displayFlags="showWireframe" />
            <OglModel name="Visual" color="#BC8F8F" depthTest="false" />
            <IdentityMapping input="@.." output="@Visual"/>
        </Node>



        <Node name="Rest state">
            <TriangleSetTopologyContainer name="topo" points="@../topo.points" edges="@../topo.edges" triangles="@../topo.triangles" />
            <TransformEngine name="transform" template="Vec3d" translation="2.5 0 0" input_position="@../MO.rest_position" />
            <MechanicalObject template="Vec3d" rest_position="@transform.output_position" position="@transform.output_position" />

            <Node name="Data">
                <DataDisplay cellData="@../../adapter.functionals" />
                <OglColorMap colorScheme="Green" />
                <IdentityMapping input="@.." output="@."/>
            </Node>

            <!--
            <Node name="Render wire">
                <VisualStyle displayFlags="showWireframe" />
                <OglModel name="Visual" color="white" depthTest="false" />
                <IdentityMapping input="@.." output="@Visual"/>
            </Node>
            -->
        </Node>
        <!--
        -->


    </Node>
</Node>
