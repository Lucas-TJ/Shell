<?xml version="1.0"?>
<Node name="root" dt="0.02" gravity="0 0 0">
    
    <Node name="plugins">
        <RequiredPlugin name="Shell"/>
        <RequiredPlugin name="Sofa.Component.AnimationLoop"/> <!-- Needed to use components [FreeMotionAnimationLoop] -->
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/> <!-- Needed to use components [MinProximityIntersection] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [CollisionResponse] -->  
        <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [FixedProjectiveConstraint] -->  
        <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->  
        <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [UniformMass] -->  
        <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->  
        <RequiredPlugin name="Sofa.Component.SceneUtility"/> <!-- Needed to use components [InfoComponent] -->  
        <RequiredPlugin name="Sofa.Component.SolidMechanics.Spring"/> <!-- Needed to use components [RestShapeSpringsForceField] -->  
        <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->  
        <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TriangleSetTopologyContainer] -->  
        <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [VisualStyle] -->  
        <RequiredPlugin name="Sofa.Component.Engine.Generate"/> <!-- Needed to use components [NormalsFromPoints] --> 

    </Node>

    <VisualStyle displayFlags ="showBehaviorModels showForceFields showVisualModels"/>
    <DefaultAnimationLoop/>
    <CollisionPipeline verbose="0"/>
    <BruteForceBroadPhase name="N2"/>
    <BVHNarrowPhase/>
    <CollisionResponse name="Response" response="PenaltyContactForceField"/>
    <MinProximityIntersection name="Proximity" alarmDistance="0.8" contactDistance="0.5"/>

    <Node name="points">
        <MechanicalObject template="Rigid3" name="fixedPoints"
            position="0.5 0.9 1 0.3856834 0 0 0.9238795"
            showObject="true" />
        <FixedProjectiveConstraint indices="0" />
    </Node>

    <Node name="one_triangle">
        <EulerImplicitSolver />
        <CGLinearSolver iterations="100" tolerance="1e-15" threshold="1e-15"/>
<!--        <SparseLDLSolver name="SparseLDL Solver" printLog="false" />-->

        <TriangleSetTopologyContainer name="trianglesTopo"
            nbPoints="3" position="
                0   0   0
                1   0   0
                0.5 0.9 0"
            edges="1 2 0 2 0 1" triangles="0 1 2"
        />

        <!--                No rotation - flat rest position                -->
<!--        <MechanicalObject name="tri" template="Rigid3" />-->

        <!--                No rotation - deformed rest position                -->
<!--        <MechanicalObject name="tri" template="Rigid3" rest_position="0 0 0 0 0 0 1   1 0 0 0 0 0 1    0.5 0.9 0 0.107456 0 0 0.99421"  position="0 0 0 0 0 0 1   1 0 0 0 0 0 1    0.5 0.9 0 0.107456 0 0 0.99421"/>-->

        <!--        Rotation of Pi/2 around z        -->
<!--        <MechanicalObject name="tri" template="Rigid3" rest_position="0 0 0 0 0 0.707107 0.707107   1 0 0 0 0 0.707107 0.707107   0.5 0.9 0 0 0 0.707107 0.707107"  position="0 0 0 0 0 0.707107 0.707107   1 0 0 0 0 0.707107 0.707107   0.5 0.9 0 0 0 0.707107 0.707107"/>-->

        <!--        Rotation of Pi/2 around z + torque on vertex 2 around local x       -->
<!--        <MechanicalObject name="tri" template="Rigid3" rest_position="0 0 0 0 0 0.707629 0.706586   1 0 0 0 0 0.707629 0.706586   0.5 0.9 0 0.0783006 -0.0735901 0.680883 0.724466"  position="0 0 0 0 0 0.707629 0.706586   1 0 0 0 0 0.707629 0.706586   0.5 0.9 0 0.0783006 -0.0735901 0.680883 0.724466"/>-->

        <!--        Rotation of Pi/2 around z + displacement on vertex 2 along z       -->
        <!--<MechanicalObject name="tri" template="Rigid3"
            position="
            0   0   0 0 0 0 1
            1   0   0 0 0 0 1
            0.5 0.9 0 0 0 0 1"/>
        -->

        <!--<MechanicalObject name="tri" template="Rigid3" rest_position="trianglesTopo.position" />-->
        <MechanicalObject name="tri" template="Rigid3" topology="@trianglesTopo" rest_position="0 0 0 1 0 0 0.5 0.9 0" />
        <NormalsFromPoints name="NormalsFrom"  position="@tri.position"/>

        <UniformMass vertexMass="0.1 0.1 [ 0.1 0 0 , 0 0.1 0 , 0 0 0.05 ]" showAxisSizeFactor="0.2"/>
        <FixedProjectiveConstraint indices="0 1" drawSize="0"/>

        <!--
        <ConstantForceField points="2" forces="0 0 10 0 0 0"/>
        -->
        <RestShapeSpringsForceField template="Rigid3" name="Springs" external_rest_shape="@../points/fixedPoints"
            points="2"
            external_points="0"
            stiffness="50000"
            angularStiffness="50000" />


        <!--<TriangularBendingFEMForceField name="FEM" bending="true" youngModulus="20000" poissonRatio="0.45" thickness="0.1"/>-->
        <BezierTriangularBendingFEMForceField name="FEM" youngModulus="20000" poissonRatio="0.45" thickness="0.1" printLog="false" normals="@NormalsFrom.normals"/>

        <!--
        <OglModel name="Visual" />
        <IdentityMapping object1="tri" object2="Visual"/>
        -->
		
		<!--

        <Node name="SubTriangles">
            <TriangleSetTopologyContainer  name="subTrianglesTopo"/>
            <TriangleSubdivisionTopologicalMapping object1="trianglesTopo" object2="subTrianglesTopo" subdivisions="3"/>
            <MechanicalObject  name="subPoints" />
            <BezierTriangleMechanicalMapping input="@../tri" output="@subPoints"/>
            <Triangle contactStiffness="0.001"/>
            <Node>
                <OglModel name="Visual" color="red"/>
                <IdentityMapping input="@../subPoints" output="@Visual"/>
            </Node>
        </Node>
-->
        
    </Node>
</Node>
