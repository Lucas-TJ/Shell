<?xml version="1.0"?>
<Node name="root" dt="0.02" gravity="0 0 0">
    <Node name="plugins">
        <RequiredPlugin name="Shell"/>
        <RequiredPlugin name="Sofa.Component.AnimationLoop"/> <!-- Needed to use components [FreeMotionAnimationLoop] -->
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,CollisionPipeline] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/> <!-- Needed to use components [MinProximityIntersection] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [CollisionResponse] -->  
        <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [FixedProjectiveConstraint,FixedRotationProjectiveConstraint] -->  
        <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- Needed to use components [MeshOBJLoader] -->  
        <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->  
        <RequiredPlugin name="Sofa.Component.Mapping.Linear"/> <!-- Needed to use components [IdentityMapping] -->  
        <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [UniformMass] -->  
        <RequiredPlugin name="Sofa.Component.MechanicalLoad"/> <!-- Needed to use components [ConstantForceField] -->  
        <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->  
        <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->  
        <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TriangleSetTopologyContainer] -->  
        <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [VisualStyle] -->  
        <RequiredPlugin name="Sofa.GL.Component.Rendering3D"/> <!-- Needed to use components [OglModel] -->  
        <RequiredPlugin name="Sofa.Component.Collision.Geometry"/> <!-- Needed to use components [TriangleCollisionModel] -->  
        <RequiredPlugin name="Sofa.Component.Engine.Transform"/> <!-- Needed to use components [Vertex2Frame] -->  
        <RequiredPlugin name="Sofa.Component.SceneUtility"/> <!-- Needed to use components [InfoComponent] -->  
        <RequiredPlugin name="Sofa.Component.LinearSolver.Direct"/> <!-- Needed to use components [SparseLDLSolver] -->  

    </Node>
    <VisualStyle displayFlags="showBehaviorModels showForceFields showVisualModels" />

    <DefaultAnimationLoop/>
    <CollisionPipeline verbose="0"/>
    <BruteForceBroadPhase name="N2"/>
    <BVHNarrowPhase/>
    <CollisionResponse name="Response" response="PenaltyContactForceField"/>
    <MinProximityIntersection name="Proximity" alarmDistance="0.8" contactDistance="0.5"/>

    <!--<Node name="pointA">
       <MechanicalObject template="Rigid3" name="fixedPoint" position="0 0 0 0 0 0 1"/>
    </Node>

    <Node name="pointB">
       <MechanicalObject template="Rigid3" name="fixedPoint" position="0.5 0 0 0 0 0 1"/>
   </Node>

   <Node name="pointC">
       <MechanicalObject template="Rigid3" name="fixedPoint" position="1 0 0 0 0 0 1"/>
   </Node>

    <Node name="pointD">
       <MechanicalObject template="Rigid3" name="fixedPoint" position="0.25 0.45 0 0 0 0 1"/>
    </Node>

    <Node name="pointE">
       <MechanicalObject template="Rigid3" name="fixedPoint" position="0.75 0.45 0 0 0 1"/>
    </Node>

    <Node name="pointF">
       <MechanicalObject template="Rigid3" name="fixedPoint" position="0.5 0.9 0 0 0 0 1"/>
    </Node>-->

    <Node name="4triangles">
            <EulerImplicitSolver rayleighMass="1.0" rayleighStiffness="1.5"/>
    <!--        <CGLinearSolver iterations="100" tolerance="1e-15" threshold="1e-15"/>-->
    <!--        <CGLinearSolver template="FullMatrix" iterations="100" tolerance="1e-15" threshold="1e-15"/>-->
            <!--<SparseLDLSolver name="SparseLDL Solver" printLog="false" />-->
            <CGLinearSolver iterations="100" tolerance="1e-15" threshold="1e-15"/>
            <Node name="fixed">
            <MeshOBJLoader name="loader" filename="../../../Shell/mesh/4triangles_bis.obj"/>
            <TriangleSetTopologyContainer name="baseTriangles" src="@loader" />
            <MechanicalObject name="tri" template="Rigid3" topology="@baseTriangles" showIndices="true" showIndicesScale="0.0007"/>
            <UniformMass vertexMass="0.1 0.1 [ 0.1 0 0 ,  0 0.1 0 ,  0 0 0.05 ]" showAxisSizeFactor="0.2"  />
            <!--<AttachProjectiveConstraint name="Constraint" object2="@tri" object1="@/pointA/fixedPoint" indices1="0" indices2="0" freeRotations="false" />
            <AttachProjectiveConstraint name="Constraint2" object2="@tri" object1="@/pointC/fixedPoint" indices1="0" indices2="2" freeRotations="false" />-->
            <FixedProjectiveConstraint indices="0 2"/>
            <FixedRotationProjectiveConstraint FixedZRotation="true"/>
            <ConstantForceField indices="5" forces="0 0 1 0 0 0"/>
            <TriangularBendingFEMForceField name="FEM" bending="true" youngModulus="20000" poissonRatio="0.42" thickness="0.1"/>
            <Node name="SubTriangles">
                <TriangleSetTopologyContainer  name="subTriangles"/>
                <!--<TriangleSubdivisionTopologicalMapping object1="baseTriangles" object2="subTriangles" subdivisions="2"/>-->
                <MechanicalObject  name="subPoints" topology="@subTriangles" showIndices="true" showIndicesScale="0.0003"/>
    <!--            <ConstantForceField points="5 9" forces="0 0 3"/>-->
                <BendingPlateMechanicalMapping input="@../tri" output="@subPoints"/>
                <TriangleCollisionModel />
                <Node name="visual">
                    <OglModel name="Visual" color="red"/>
                    <IdentityMapping input="@../subPoints" output="@Visual"/>
                </Node>
            </Node>
        </Node>
<!--        <Node>-->
<!--            <MechanicalObject name="basePointsVec3" template="Vec3d"/>-->
<!--            <IdentityMapping/>-->
<!--            <Node name="VisualBasePoints">-->
<!--                <OglModel name="Visual" color="green"/>-->
<!--                <IdentityMapping object1="basePointsVec3" object2="Visual"/>-->
<!--            </Node>-->
<!--        </Node>-->

        

    </Node>
</Node>
